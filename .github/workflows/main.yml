name: BitGifty CI-CD
on:
    # Triggers the workflow on push or pull request events but only for the masterii branch
    
    push:
      branches: [master]
    pull_request:
      branches: [master]
    # Run this workflow manually from the Actions tab on Repo homepage
    workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    env:
      TATUM_API_KEY: ${{ secrets.TATUM_API_KEY }}
      BIN_KEY: ${{ secrets.BIN_KEY }}
      BIN_SECRET: ${{ secrets.BIN_SECRET }}
      ENC_KEY: ${{ secrets.ENC_KEY }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DEBUG: ${{ secrets.DEBUG }}
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
      API_KEY: ${{ secrets.API_KEY }}
      API_SECRET: ${{ secrets.API_SECRET }}
      CLOUD_NAME: ${{ secrets.CLOUD_NAME }}
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      EMAIL_HOST: ${{ secrets.EMAIL_HOST }}
      EMAIL_HOST_USER: ${{ secrets.EMAIL_HOST_USER }}
      EMAIL_HOST_PASSWORD: ${{ secrets.EMAIL_HOST_PASSWORD }}
      EMAIL_PORT: ${{ secrets.EMAIL_PORT }}
    steps:
      - uses: actions/checkout@v3
      - name: Copy repository contents via scp
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}       
          # VPS username
          username: ${{ secrets.VPS_SSH_USERNAME }}
          # SSH key (copy it from your local machine)
          key: ${{ secrets.VPS_SSH_SECRET }}
          # SSH port
          port: ${{ secrets.VPS_SSH_PORT }}
          source: "."
          target: ${{ secrets.PROJECT_PATH }}
        # with:
      - name: Executing remote command
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}       
          # VPS username
          username: ${{ secrets.VPS_SSH_USERNAME }}
          # SSH key (copy it from your local machine)
          key: ${{ secrets.VPS_SSH_SECRET }}
          # SSH port
          port: ${{ secrets.VPS_SSH_PORT }}
          script: |
            cd ${{ secrets.PROJECT_PATH }}
            make down
            make build
            echo "Deleting old image(s)..."
            docker image prune -a -f